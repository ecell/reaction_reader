from model.model import Model, Species, ReactionRule
from solver.ODESolver import ODESolver
'''
S1 + S2 -> P, k = 0.1
P -> S2, k = 0.3

Volume: 1e-18

Initial values:
S1 = 10000.0
S2 = 5000.0
P = 10.0
'''

def add_reaction(m, reactants, products, **attr):
    r = ReactionRule(0, m, reactants, products, True, **attr)
    return m.add_concrete_reaction(r, reactants, products)

m = Model()
S1 = m.register_species(Species(name='S1'))
S2 = m.register_species(Species(name='S2'))
P = m.register_species(Species(name='P'))

add_reaction(m, [S1, S2], [P], k=.01, k_name='MassAction')
add_reaction(m, [P], [S2], k=.3, k_name='MassAction')

variables = [10000., 5000., 10.]

volume = 1e-18
functions = make_functions(m, m.reaction_results.values(), volume)
the_solver = ODESolver()
initialize(the_solver, functions, variables)

_step()
_step()
self.the_time = (the_solver.get_current_time() + the_solver.get_step_interval() * 100000)
the_solver.set_next_time(self.the_time)
_step()
_step()
_step()

output_series = get_logged_data()
print output_series

