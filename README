---------------------
How to use pybngl.py
---------------------

How to run

  - $ python pybngl.py [options] [simfile]
    -- options : options, see below.
    -- simfile : simulation model file name.


Options (inside [] is default value, allow arbitrary order)

  -r FILENAME : output generated reactions to FILENAME
  -s STEP_NUM : run a simulation with STEP_NUM step [120]
  -i ITR_NUM  : loop reaction genaration with ITR_NUM times [10]
  -d          : allow duplicated rule
  -t END_TIME : run a simulation by END_TIME(sec)[run a simulation with 120 steps, END_TIME is not defined]
  -v          : print out generated reactions to stdout
  -l          : allow loc[cation] notation (You have to use this option, if you use location info in model.)

 When both option "-s" and "-t" are defined, pybngl.py use "-t" option only.


Examples

  - $ python pybngl.py -s 10 -v test/testToy.py
    -- run a simulation with the model written in test/testToy.py
    -- (-s 10) : Number of the ODE step is 10
    -- (-v)    : print out generated reactions to stdout

  - $ python pybngl.py -s 0 -i 20 -v test/testLabel.py
    -- run a simulation with the model written in test/testLabel.py
    -- (-s 0)  : Number of the ODE step is 0 (generate reactions without simulation)
    -- (-i 20) : loop reaction generation 20 times (it takes long long time...)
    -- (-v)    : print out generated reactions to stdout

  - $ python pybngl.py -l test/testLoc.py
    -- run a simulation with the model written in test/testLoc.py
    -- (-l)    : allow loc notation(testLoc.py use loc natation)


-------------------
Model samples
-------------------

  - test/testConc.py
    -- a model with user defined function

  - test/testEgfr.py
    -- a model with EGF receptor signaling pathway

  - test/testFunc.py
    -- a model with user defined function
    -- definition and usage of functions are written in head of the file

  - test/testLabel.py
    -- a model with label(%) notation
    -- It takes a long time to generate reactions

  - test/testLoc.py
    -- a model with loc notation
    -- needs "-l" option in use

  - test/testToy.py
    -- a model with label(%) notation

  - working/testDuplicatedLabel.py
    -- a model with optical isomer notatio(_)
    -- currently not supported

